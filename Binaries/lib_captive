#!/bin/sh

if [ "$LIB_CAPTIVE" = "loaded" ]; then
  return
fi
LIB_CAPTIVE=loaded

MAC_LIST=$LOG/allowed_macs
IP_LIST=$LOG/allowed_ips

captive_ip(){
  ACTION=${3:-ACCEPT}
  iptables $1 FCAPTIVE -s $2 -j $ACTION
  iptables $1 FCAPTIVE -d $2 -j $ACTION
  if [ ! "$3" ]; then
    ACTION=${3:-INTERNET}
    iptables -t nat $1 CAPTIVE -s $2 -j $ACTION
  fi
}

captive_ip_accept(){
  captive_ip -D $1 DROP
  if iptables -L FCAPTIVE -nv | grep -q $1; then
    actionlog "Found $1 still in iptables!"
    captive_ip -D $1
  fi
  captive_ip -I $1
}

captive_ip_deny(){
  captive_ip -D $1
  captive_ip -I $1 DROP
}

captive_ip_check(){
  if [ "$1" ]; then
    grep -q $1 $IP_LIST
  fi
}

captive_ip_add(){
  if ! captive_ip_check $1; then
    echo $1 >> $IP_LIST
    captive_ip_accept $1
  fi
}

captive_ip_del(){
  grep -v $1 $IP_LIST > /tmp/ips
  mv /tmp/ips $IP_LIST
  captive_ip_deny $1
}

captive_mac_accept(){
  if ! iptables -L FCAPTIVE -n | grep -qi $1; then
    MAC_IPT="-m mac --mac-source $1"
    iptables -I FCAPTIVE $MAC_IPT -j ACCEPT
    iptables -t nat -I CAPTIVE $MAC_IPT -j INTERNET
  fi
}

captive_mac_deny(){
  if iptables -L FCAPTIVE -n | grep -qi $1; then
    MAC_IPT="-m mac --mac-source $1"
    iptables -D FCAPTIVE $MAC_IPT -j ACCEPT
    iptables -t nat -D CAPTIVE $MAC_IPT -j INTERNET
  fi
}

captive_mac_check(){
  if [ "$1" ]; then
    grep -q $1 $MAC_LIST
  fi
}

captive_mac_add(){
  if ! captive_mac_check $1; then
    echo $1 >> $MAC_LIST
    captive_mac_accept $1
  fi
}

captive_mac_del(){
  grep -v $1 $MAC_LIST > /tmp/macs
  mv /tmp/macs $MAC_LIST
  captive_mac_deny $1
}

captive_clear(){
  actionlog Clearing IPs and refreshing MACs
  iptables -t nat -F CAPTIVE
  iptables -t nat -I CAPTIVE -j RETURN
  iptables -F FCAPTIVE
  iptables -I FCAPTIVE -j RETURN
  for ip in $( cat $IP_LIST ); do
    captive_ip_accept $ip
  done
  for mac in $( cat $MAC_LIST ); do
    captive_mac_accept $mac
  done
}

captive_accept_all(){
  captive_clear
  iptables -A FCAPTIVE -j ACCEPT
  iptables -t nat -I CAPTIVE -j INTERNET
}

# This can be called from time to time to check on idle people
captive_cleanup(){
  for ips in $( ips_connected ); do
    PACKETS=$( iptables -L FCAPTIVE -nv | grep $ips | head -n 1 | sed -e "s/ *\([^ ]*\).*/\1/" )
    log Checking ip $ips - has $PACKETS packets
    if [ ! "$PACKETS" ]; then
      actionlog Still in $USERS_CONNECTED, but not in iptables
      users_connected_delete $ips
    elif [ "$PACKETS" = 0 ]; then
      actionlog No packets, kicking $ips
      captive_ip_deny $ips
      users_connected_delete $ips
    fi
  done
#  log Clearing counters
  iptables -Z FCAPTIVE
  cp $USERS_CONNECTED $USERS_CONNECTED.tmp
}
